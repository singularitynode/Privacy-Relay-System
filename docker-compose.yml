version: "3.8"
services:
  token-manager:
    build: .
    image: privacy-token-manager:local
    container_name: token-manager
    volumes:
      - ./tokens:/data
    # run the token manager CLI server
    command: ["python", "token_manager.py", "--serve", "--path", "/data/tokens.json"]
    environment:
      - TOKENS_PATH=/data/tokens.json
      - TOKEN_MGR_ADMIN=changeme_admin_token
    ports:
      - "9200:9200"

  node1:
    build:
      context: .
      dockerfile: relay_node/Dockerfile
    container_name: node1
    volumes:
      - ./certs:/certs:ro
      - ./tokens:/data:ro
      - ./node1_data:/data
    environment:
      - NODE_DB=/data/node1.db
      - TOKENS_FILE=/data/tokens.json
      - SHARED_KEY_FILE=/data/shared_key_node1.bin
      - TLS_CERT=/certs/node1.local.crt.pem
      - TLS_KEY=/certs/node1.local.key.pem
      - TLS_CA=/certs/ca.crt.pem
    ports:
      - "8443:8443"

  node2:
    build:
      context: .
      dockerfile: relay_node/Dockerfile
    container_name: node2
    volumes:
      - ./certs:/certs:ro
      - ./tokens:/data:ro
      - ./node2_data:/data
    environment:
      - NODE_DB=/data/node2.db
      - TOKENS_FILE=/data/tokens.json
      - SHARED_KEY_FILE=/data/shared_key_node2.bin
      - TLS_CERT=/certs/node2.local.crt.pem
      - TLS_KEY=/certs/node2.local.key.pem
      - TLS_CA=/certs/ca.crt.pem
    ports:
      - "8444:8443"

  node3:
    build:
      context: .
      dockerfile: relay_node/Dockerfile
    container_name: node3
    volumes:
      - ./certs:/certs:ro
      - ./tokens:/data:ro
      - ./node3_data:/data
    environment:
      - NODE_DB=/data/node3.db
      - TOKENS_FILE=/data/tokens.json
      - SHARED_KEY_FILE=/data/shared_key_node3.bin
      - TLS_CERT=/certs/node3.local.crt.pem
      - TLS_KEY=/certs/node3.local.key.pem
      - TLS_CA=/certs/ca.crt.pem
    ports:
      - "8445:8443"

  client:
    build:
      context: .
      dockerfile: client/Dockerfile
    container_name: client
    volumes:
      - ./certs:/certs:ro
      - ./tokens:/data:ro
      - ./client_data:/data
    environment:
      - TOKENS_FILE=/data/tokens.json
      - CLIENT_CERT=/certs/client.local.crt.pem
      - CLIENT_KEY=/certs/client.local.key.pem
      - TLS_CA=/certs/ca.crt.pem
      - PROXY_PORT=3128
      - PROXY_ADMIN=9000
    ports:
      - "3128:3128"
      - "9000:9000"

# Notes:
# - tokens folder should contain tokens.json generated by token_manager.
# - certs must be created by init_certs.sh and placed under ./certs